!function(){window.optmlLogger={isDebug:function(){return new URLSearchParams(location.search).has("optml_debug")||null!==localStorage.getItem("optml_debug")},log:function(e,...t){this.isDebug()&&console[e]("[Optimole]",...t)},info:function(...e){this.log("info",...e)},warn:function(...e){this.log("warn",...e)},error:function(...e){this.log("error",...e)},table:function(e){this.isDebug()&&(console.log("[Optimole] Table:"),console.table(e))}};const e={getKey:(e,t)=>`optml_pp_${e}_${t}`,isProcessed:function(e,t){try{const o=this.getKey(e,t),n=sessionStorage.getItem(o);return!!n&&(parseInt(n,10),Date.now(),!0)}catch(e){return optmlLogger.error("Error checking sessionStorage:",e),!1}},markProcessed:function(e,t){try{const o=this.getKey(e,t);sessionStorage.setItem(o,Date.now().toString())}catch(e){optmlLogger.error("Error setting sessionStorage:",e)}}};function t(e){if(!e||e===document.body)return"body";if(e.id)return`#${e.id}`;const o=e.tagName.toLowerCase();let n="";e.className&&"string"==typeof e.className&&(n=e.className.includes("optml-bg-lazyloaded")?"."+e.className.trim().split(/\s+/).filter((e=>"optml-bg-lazyloaded"!==e)).join("."):"."+e.className.trim().replace(/\s+/g,"."));const i=e.parentElement;if(!i||i===document.body)return`body > ${o}${n}`;let r="";const s=i.children;let l=0,a=0;for(let t=0;t<s.length;t++)s[t].tagName===e.tagName&&(l++,s[t]===e&&(a=l));return l>1&&(r=`:nth-of-type(${a})`),`${i.id?`#${i.id}`:t(i)} > ${o}${n}${r}`}function o(e,t=!1){const o=window.getComputedStyle(e).backgroundImage;return!(!o||"none"===o||!o.includes("url("))&&(!t||o)}async function n(){if(0===window.innerWidth||0===window.innerHeight)return void optmlLogger.info("Window must have non-zero dimensions for image detection.");if("hidden"===document.visibilityState&&!document.prerendering)return void optmlLogger.info("Page opened in background tab so image detection is not performed.");const{pageProfileId:n,missingDevices:i,bgSelectors:r}=optimoleDataOptimizer||{},s=function(){const e=window.innerWidth;return e<=600?(optmlLogger.info("Device detected as mobile based on width:",e),1):(optmlLogger.info("Device detected as desktop based on width:",e),2)}(),l=n,a=i?i.split(","):[];if(optmlLogger.info("Device Type:",s),optmlLogger.info("Missing Devices:",a),optmlLogger.info("Profile ID:",n),optmlLogger.info("Background Selectors:",r||"None provided"),!a.includes(s.toString()))return void optmlLogger.info("Skipping device type, data already exists:",s);if(e.isProcessed(l,s))return void optmlLogger.info("Skipping detection, already processed this device/URL combination");"complete"!==document.readyState&&(optmlLogger.info("Waiting for page to fully load..."),await new Promise((e=>{window.addEventListener("load",e,{once:!0})})),optmlLogger.info("Page fully loaded, proceeding with detection")),await new Promise((e=>{"function"==typeof requestIdleCallback?requestIdleCallback(e):setTimeout(e,200)}));let c={element:null,imageId:null,bgSelector:null,bgUrls:null};if(PerformanceObserver.supportedEntryTypes.includes("largest-contentful-paint")){const e=performance.getEntriesByType("largest-contentful-paint");if(e&&e.length>0){const t=e[e.length-1];t&&t.element&&(c.element=t.element,optmlLogger.info("LCP element found from existing entries:",c.element),g(c.element))}else optmlLogger.info("Setting up LCP observer"),await new Promise((e=>{const t=new PerformanceObserver((o=>{const n=o.getEntries();if(0===n.length)return;const i=n[n.length-1];i&&i.element&&(c.element=i.element,optmlLogger.info("LCP element detected:",c.element),g(c.element)),t.disconnect(),e()}));t.observe({type:"largest-contentful-paint",buffered:!0}),setTimeout((()=>{t.disconnect(),e()}),1500)}))}else optmlLogger.info("LCP detection not supported in this browser");function g(e){if(e)if("IMG"===e.tagName){const t=e.getAttribute("data-opt-id");t&&(c.imageId=parseInt(t,10),optmlLogger.info("LCP element is an Optimole image with ID:",c.imageId))}else{const n=o(e,!0);!1!==n&&(c.bgSelector=t(e),c.bgUrls=function(e){if(!e)return null;const t=[],o=/url\(['"]?(.*?)['"]?\)/g;let n;for(;null!==(n=o.exec(e));)n[1]&&t.push(n[1]);return t.length>0?t:null}(n),optmlLogger.info("LCP element has background image:",c.bgSelector,c.bgUrls))}}let d="hidden"!==document.visibilityState,m=!1;const u=function(e,t){let o;return function(){clearTimeout(o),o=setTimeout((()=>e.apply(this,arguments)),100)}}((()=>{m=!0,optmlLogger.info("Window resized during detection, results may be affected")})),p=()=>{d="hidden"!==document.visibilityState,optmlLogger.info("Page visibility changed:",d?"visible":"hidden")};window.addEventListener("resize",u,{passive:!0}),document.addEventListener("visibilitychange",p);const f=[],b=new Map,h=new IntersectionObserver((e=>{e.forEach((e=>{if(e.isIntersecting){const t=e.target;if("IMG"===t.tagName){const e=parseInt(t.getAttribute("data-opt-id"),10);isNaN(e)||f.includes(e)||f.push(e)}else if(t.hasAttribute("data-optml-bg-selector")){const e=t.getAttribute("data-optml-bg-selector"),o=t.getAttribute("data-optml-specific-selector");if(e&&o&&L.has(e)){const t=L.get(e);t.includes(o)||(t.push(o),optmlLogger.info(`Element with selector "${o}" is above the fold`))}}}}))}),{threshold:.1});document.querySelectorAll("img[data-opt-id]").forEach((e=>{const t=parseInt(e.getAttribute("data-opt-id"),10);isNaN(t)?optmlLogger.warn("Invalid data-opt-id:",e.getAttribute("data-opt-id")):(b.set(e,t),h.observe(e))}));const L=new Map,w=new Map;if(r&&Array.isArray(r)&&r.length>0){optmlLogger.info("Processing background selectors:",r);let e=0;r.forEach((n=>{try{const i=document.querySelectorAll(n);if(0===i.length)return void optmlLogger.warn("No elements found for background selector:",n);L.set(n,[]),e+=function(e,n,i,r){const s=new MutationObserver((e=>{for(const t of e)if("attributes"===t.type&&"class"===t.attributeName){const e=t.target;if(e.classList.contains("optml-bg-lazyloaded")&&o(e)){r.observe(e),s.disconnect(e);const t=e.getAttribute("data-optml-specific-selector");optmlLogger.info(`Background element "${t}" is now observable`)}}})),l=[];return e.forEach((e=>{const i=t(e);e.setAttribute("data-optml-bg-selector",n),e.setAttribute("data-optml-specific-selector",i),e.classList.contains("optml-bg-lazyloaded")&&o(e)?r.observe(e):l.push(e)})),l.length>0&&(l.forEach((e=>{s.observe(e,{attributes:!0,attributeFilter:["class"]})})),setTimeout((()=>{s.disconnect(),optmlLogger.info(`Stopped waiting for lazyload on ${n} elements`)}),5e3)),l.length}(Array.from(i),n,0,h),optmlLogger.info(`Processed ${i.length} elements for background selector: ${n}`)}catch(e){optmlLogger.error("Error processing background selector:",n,e)}})),r.forEach((e=>{const n=new Map;w.set(e,n),document.querySelectorAll(e).forEach((e=>{if(e.classList.contains("optml-bg-lazyloaded")){const i=o(e,!0);if(!1===i)return;const r=t(e);if(!r)return;const s=[],l=/url\(['"]?(.*?)['"]?\)/g;let a;for(;null!==(a=l.exec(i));)a[1]&&s.push(a[1]);s.length>0&&(n.set(r,s),optmlLogger.info(`Found background image URL(s) for "${r}":`,s))}}))}));const n=e>0?600:300;optmlLogger.info(`Waiting ${n}ms for ${e} pending background elements`),await new Promise((e=>setTimeout(e,n)))}else await new Promise((e=>setTimeout(e,300)));if(h.disconnect(),window.removeEventListener("resize",u),document.removeEventListener("visibilitychange",p),document.querySelectorAll("[data-optml-bg-selector]").forEach((e=>{e.removeAttribute("data-optml-bg-selector"),e.removeAttribute("data-optml-specific-selector")})),m&&optmlLogger.warn("Window was resized during detection, results may not be accurate"),d||optmlLogger.warn("Page became hidden during detection, results may not be accurate"),optmlLogger.info("Above the fold images with data-opt-id:",f),optmlLogger.info("Background selectors:",L),f.length>0||L.size>0||c.imageId||c.bgSelector){const t={};L.forEach(((e,o)=>{t[o]={},e.forEach((e=>{t[o][e]=null,w.has(o)&&w.get(o).has(e)&&(t[o][e]=w.get(o).get(e))}))}));const o={d:s,a:f,b:t,u:l,t:optimoleDataOptimizer._t,h:optimoleDataOptimizer.hmac,l:{i:c.imageId,s:c.bgSelector,u:c.bgUrls}};return optmlLogger.info("Sending data with LCP information:",{lcpImageId:c.imageId,lcpBgSelector:c.bgSelector,lcpBgUrls:c.bgUrls}),optmlLogger.info("Sending background selectors:",t),function(t){const{restUrl:o}=optimoleDataOptimizer||{};if(!o)return void optmlLogger.error("REST API URL not available");const n=o+"/optimizations",i=new Blob([JSON.stringify(t)],{type:"application/json"});navigator.sendBeacon(n,i)?(optmlLogger.info("Data sent successfully using sendBeacon"),e.markProcessed(t.u,t.d)):(optmlLogger.error("Failed to send data using sendBeacon"),fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((o=>{optmlLogger.info("Data sent successfully using fetch fallback:",o),e.markProcessed(t.u,t.d)})).catch((e=>{optmlLogger.error("Error sending data using fetch fallback:",e)})))}(o),o}return optmlLogger.info("No above-the-fold images, background elements, or LCP elements found"),null}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",n):n()}();